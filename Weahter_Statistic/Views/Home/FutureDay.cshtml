@model List<Weather_Statistic.Models.OneInfoModel>
@{
    ViewData["Title"] = "FutureDay";
    Layout = "~/Views/Shared/_ResultPage.cshtml";
}

<head>


</head>
<article>
    <section class="title">
    <h3 class="headsection">Prognoza pogody na dzień jutrzejszy</h3>
    <form asp-controller="Home" asp-action="FutureDayResult" method="get">
        <div class="input-group mb-3">
            <input type="text" name="town" class="form-control" placeholder="Nazwa miasta" aria-label="Nazwa miasta" aria-describedby="button-addon2">
            <input type="hidden" name="days" value="1">
            <div class="input-group-append">
                <button class="btn btn-dark" type="submit" id="button-addon2">Wyszukaj</button>
            </div>
        </div>
    </form>
</section>
    @if (ViewBag.flag != true)
    {
        <section>
            <h2>Podaj miasto</h2>
        </section>
    }
    else
    {
        <section class="resultSection">
            <h1>Wyniki dla: @Model[0].Place</h1>
            <div class="default">
                <h3>Godzinowa prognoza pogody na dzień @Model[0].Sunrise.ToString("dd/MM/yyyy")</h3>
                <h7>(Godziny są zaprezentowane w stosunku do czasu środkowoeuropejskiego)</h7>
                <div class="">
                    <div id="container" style="width: auto; min-width: 380px; height: 310px; margin: 0 auto">
                        <div style="margin-top: 100px; text-align: center" id="loading">
                            <i class="fa fa-spinner fa-spin"></i> Loading data from external source
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="table table-bordered table-dark mytable">
                            <thead>
                                <tr class="d-flex">
                                    <th class="col-sm bg-secondary">Godzina</th>
                                    <th class="col-sm bg-secondary">Temperatura</th>
                                    <th class="col-sm bg-secondary">Ciśnienie</th>
                                    <th class="col-sm bg-secondary">Ilość opadów i typ</th>
                                    <th class="col-sm bg-secondary">Prędkość i kieunek wiatru</th>
                                </tr>
                            </thead>
                            @{
                                foreach (var item in Model)
                                {
                                    int temp = item.SunriseTime[0] + 2;
                                    if (temp > 23)
                                    {
                                        temp -= 24;
                                    }
                                <tr class="d-flex">
                                    <th class="col-sm bg-secondary">@temp:00</th>
                                    <td class="col-sm">@item.MaxTemp&deg C</td>
                                    <td class="col-sm">@item.Pressure hPa</td>
                                    <td class="col-sm">
                                        @item.Rainfall mm
                                        @if (item.TypeWeat == "rain")
                                        {
                                            <p>deszczu</p>
                                        }
                                        else if (item.TypeWeat == "snow")
                                        {
                                            <p>śniegu</p>
                                        }
                                        else if (item.TypeWeat == "sleet")
                                        {
                                            <p>deszczu ze śniegiem</p>
                                        }
                                    </td>
                                    <td class="col-sm">@item.Windspeed m/s @item.Direct</td>
                                </tr>
                                }
                            }
                        </table>
                    </div>

                    <div class="summary">
                        <h3>Podsumowanie dnia:</h3>
                        <p>Maksymalna temperatura w ciągu dnia: <strong>@Model.Max(x => x.MaxTemp)&degC</strong></p>
                        <p>Minimalna temperatura w ciągu dnia: <strong>@Model.Min(x => x.MaxTemp)&degC </strong></p>
                        @{
                            DateTime tempsun = Model[0].Sunrise.AddHours(2);
                        }
                        <p>Moment wschodu słońca: <strong>@tempsun.ToString("HH:mm") </strong></p>
                        @{
                            tempsun = Model[0].Sunset.AddHours(2);
                        }
                        <p>Moment zachodu słońca: <strong>@tempsun.ToString("HH:mm") </strong></p>
                        <p>Maksymalne ciśnienie w ciągu dnia: <strong>@Model.Max(x => x.Pressure) hPa</strong></p>
                        <p>Minimalne ciśnienie w ciągu dnia: <strong>@Model.Min(x => x.Pressure) hPa</strong></p>
                        <p>Liczba godzin, w których jest ryzyko opadów w ciągu 24h: <strong>@Model.Count(x => x.Rainfall > 0)</strong></p>

                        <h4>Ciekawostki</h4>
                        <p>Mediana temperatury maksymalnej (godzinowej) wynosi: <strong>@ViewBag.medianTemp hPa</strong></p>
                        <p>Mediana ciśnienia (godzinowej) wynosi: <strong>@ViewBag.medianPressure hPa</strong></p>
                        <p>Średnia temperatury maksymalnej (godzinowej) wynosi: <strong>@Model.Average(x=>x.MaxTemp) hPa</strong></p>
                        <p>Odchylenie standardowe temperatury maksymalnej (godzinowej) wynosi: <strong>@ViewBag.devationTemp&degC</strong></p>
                        <p>Średnie ciśnienie (godzinowe) wynosi: <strong>@Model.Average(x => x.Pressure) hPa</strong></p>
                        <p>Odchylenie standardowe ciśnienia wynosi: <strong>@ViewBag.devationPress hPa</strong></p>
                    </div>
                </div>
            </div>
        </section>
}

</article>

<script>
    var arrayInfo = null;
    var arrayTime = null;
</script>
@if (Model != null)
{
    <script>
     arrayInfo =@Html.Raw(Json.Serialize(Model));
     arrayTime=@Html.Raw(Json.Serialize(Model.Select(x=>x.SunriseTime)));


    </script>
}

<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/windbarb.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://highcharts.github.io/pattern-fill/pattern-fill-v2.js"></script>
<link href="https://netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.css" rel="stylesheet">

<script src="~/js/mychartfuture.js">

</script>